generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  fullName  String
  phone     String   @unique
  role      Role     @default(CUSTOMER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  address   String?
  latitude  Float?
  longitude Float?
  language  Lang     @default(RU)
  orders    Order[]
}

model Category {
  id            Int        @id @default(autoincrement())
  name          String     @unique
  parentId      Int?
  parent        Category?  @relation("SubCategories", fields: [parentId], references: [id])
  subCategories Category[] @relation("SubCategories")
  products      Product[]
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String      @unique
  description String?
  price       Int
  imageUrl    String?
  categoryId  Int?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  OrderItem   OrderItem[]
  category    Category?   @relation(fields: [categoryId], references: [id])
}

model Order {
  id         Int          @id @default(autoincrement())
  userId     Int
  status     OrderStatus  @default(PENDING)
  total      Int
  delivery   DeliveryType
  deliveryAt DateTime
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  user       User         @relation(fields: [userId], references: [id])
  items      OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

enum Role {
  CUSTOMER
  ADMIN
}

enum Lang {
  RU
  UZ
}

enum OrderStatus {
  PENDING
  CONFIRMED
  DELIVERED
  CANCELED
}

enum DeliveryType {
  DELIVERY
  PICKUP
}
