// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  fullName  String
  phone     String    @unique
  location  Location?
  role      Role      @default(CUSTOMER)
  orders    Order[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum Role {
  CUSTOMER
  ADMIN
}

model Location {
  id        String  @id @default(uuid())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int     @unique
  latitude  Float?
  longitude Float?
  address   String?
  apartment String?
  entrance  String?
  room      String?
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Decimal
  imageUrl    String
  category    Category    @relation(fields: [categoryId], references: [id])
  categoryId  Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  OrderItem   OrderItem[]
}

model Order {
  id         Int          @id @default(autoincrement())
  user       User         @relation(fields: [userId], references: [id])
  userId     Int
  items      OrderItem[]
  status     OrderStatus  @default(PENDING)
  total      Decimal
  delivery   DeliveryType
  deliveryAt DateTime
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

enum OrderStatus {
  PENDING
  CONFIRMED
  DELIVERED
  CANCELED
}

enum DeliveryType {
  DELIVERY
  PICKUP
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
}
